# This File Was Generated by AUTOM Build Tool. Do NOT EDIT!!!
import("//gn-utils/Utils.gni")

static_library("omega-common"){
  include_dirs = ["/Users/alextopper/Documents/GitHub/omega-ge-project/omega-common/include"]
  sources = [
  "/Users/alextopper/Documents/GitHub/omega-ge-project/omega-common/src/json.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/omega-common/src/fs.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/omega-common/src/crt.c",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/omega-common/src/utils.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/omega-common/src/fs-cocoa.mm"
]
  public_deps = []
  defines = []
  libs = []
  frameworks = ["Foundation.framework"]
  output_dir = "$root_out_dir/lib"

}

action("std_omegasl"){
  sources = ["/Users/alextopper/Documents/GitHub/omega-ge-project/shaders/std.omegasl"]
 script = "/Users/alextopper/Documents/GitHub/omega-ge-project/omegasl/_main.py"
  args = ["--target", "metal", "--temp", "/Users/alextopper/Documents/GitHub/omega-ge-project/out/temp", "-o", "/Users/alextopper/Documents/GitHub/omega-ge-project/out/stdshaderlib", "/Users/alextopper/Documents/GitHub/omega-ge-project/shaders/std.omegasl"]
  public_deps = []
  outputs = ["$root_out_dir/stdshaderlib"]
}

mac_framework_bundle("OmegaGTE"){
  version = "0.3"
  resources = ["/Users/alextopper/Documents/GitHub/omega-ge-project/src/Info.plist", "/Users/alextopper/Documents/GitHub/omega-ge-project/$root_out_dir/stdshaderlib"]
  include_dirs = ["/Users/alextopper/Documents/GitHub/omega-ge-project/include", "/Users/alextopper/Documents/GitHub/omega-ge-project/omega-common/include"]
  sources = [
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/GE.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/GECommandQueue.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/GEPipeline.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/GERenderTarget.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/GTEBase.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/OmegaGTE.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/TE.cpp",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetalTexture.mm",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetalPipeline.mm",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetal.mm",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetalCommandQueue.mm",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetalRenderTarget.mm",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetalCommandQueue.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetal.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetalTexture.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetalRenderTarget.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/metal/GEMetalPipeline.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/src/MetalTEContext.mm",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/include/omegaGTE/GEPipeline.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/include/omegaGTE/GETexture.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/include/omegaGTE/GTEBase.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/include/omegaGTE/TE.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/include/omegaGTE/GTEShaderTypes.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/include/omegaGTE/GERenderTarget.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/include/omegaGTE/GE.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/include/omegaGTE/GECommandQueue.h",
  "/Users/alextopper/Documents/GitHub/omega-ge-project/include/OmegaGTE.h"
]
  public_deps = [":std_omegasl", ":omega-common"]
  defines = ["TARGET_METAL"]
  libs = []
  frameworks = ["Cocoa.framework", "QuartzCore.framework", "Metal.framework"]
  output_dir = "$root_out_dir/Frameworks"

}



