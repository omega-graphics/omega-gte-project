#!/usr/bin/env python3

include("./gn/OmegaGTE.autom")

Project("OmegaGTE","0.3")

enable_tests = True

# if is_external_project:
#     enable_tests = False

t:Library

subdir("./common")

omega_gte_headers = glob("./include/omegaGTE/*.h") + ["./include/OmegaGTE.h"]


omega_gte_main_srcs = [
    "./src/GE.cpp",
    "./src/GECommandQueue.cpp",
    "./src/GEPipeline.cpp",
    "./src/GERenderTarget.cpp",
    "./src/GTEBase.cpp",
    "./src/OmegaGTE.cpp",
    "./src/TE.cpp"
]

defines = []
if is_mac:
    defines += ["TARGET_METAL"]
    omega_gte_main_srcs += glob("./src/metal/*.mm") + glob("./src/metal/*.h") + ["./src/MetalTEContext.mm"]

elif is_win:
    defines += ["TARGET_DIRECTX"]
    omega_gte_main_srcs += glob("./src/d3d12/*.cpp") + glob("./src/d3d12/*.h") + ["./src/D3D12TEContext.cpp"]

omegasl_shader_lib(name="std",src="./shaders/std.omegasl",output_dir="stdshaderlib",temp_dir="temp")

all_srcs = omega_gte_main_srcs + omega_gte_headers

if is_mac:
    FrameworkBundle("OmegaGTE",all_srcs,["std_omegasl"],"Frameworks","0.3")
    set_property("OmegaGTE","resources",["./src/Info.plist",f"{root_out_dir}/stdshaderlib"])
    set_property("OmegaGTE","frameworks",["Cocoa.framework","QuartzCore.framework","Metal.framework"])
else:
    SharedLibrary("OmegaGTE",all_srcs,["std_omegasl"],"lib")
    set_property("OmegaGTE","libs",["user32.lib"])
    set_property("OmegaGTE","defines",["__BUILD__"])


Config("OmegaGTE_conf",["omega-common"],["./include"],defines)
set_property("OmegaGTE_conf","configs",["omega-common_conf"])
set_property("OmegaGTE","configs",["OmegaGTE_conf"])

if enable_tests:
    if is_mac:
        AppBundle("2DTest",["./tests/metal/2DTest/main.mm"],["OmegaGTE"],"tests")
        set_property("2DTest","configs",["OmegaGTE_conf"])
        set_property("2DTest","info_plist",abspath("./tests/metal/2DTest/Info.plist"))
        set_property("2DTest","resources",[abspath("./tests/metal/2DTest/MainMenu.nib")])
        # set_property("2DTest","framework_dirs",[f"{gen_root_out_dir}/Frameworks"])
        set_property("2DTest","embedded_frameworks",["OmegaGTE.framework"])
        set_property("2DTest","frameworks",["Cocoa.framework","QuartzCore.framework"])
    elif is_win:
        EMBED = abspath("./tests/directx/2DTest/app.exe.manifest")
        conf = f"./conf-out/manifest.rc"
        configure("./tests/directx/2DTest/manifest.rc.in",conf)
        Executable("2DTest",["./tests/directx/2DTest/main.cpp",conf],["OmegaGTE"],"tests")
        set_property("2DTest","configs",["OmegaGTE_conf","omega-common_conf"])
        set_property("2DTest","libs",["user32.lib"])
        
        Copy("OmegaGTE_Copy",[f"{root_out_dir}/lib/OmegaGTE.dll",f"{root_out_dir}/stdshaderlib"],["OmegaGTE"],f"{gen_root_out_dir}/tests")


# print(python_include_dir)

# SharedLibrary("pybindOmegaGTE",["./wrappers/python/pybind.cpp"],["OmegaGTE"],"wrappers/python")
# append_property("pybindOmegaGTE","include_dirs",[python_include_dir])



